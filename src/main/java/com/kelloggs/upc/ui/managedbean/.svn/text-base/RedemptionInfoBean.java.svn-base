package com.kelloggs.upc.ui.managedbean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;

import com.kelloggs.upc.common.dto.RedemptionInfoDTO;
import com.kelloggs.upc.common.dto.RedemptionsInfoDTO;
import com.kelloggs.upc.ui.common.UPCApplicationException;
import com.kelloggs.upc.ui.common.UPCConstants;
import com.kelloggs.upc.ui.delegator.RedemptionInfoDelegator;

/**
 * The Class RedemptionInfoBean.
 */
@ManagedBean(name = "redemptionInfoBean")
@ViewScoped
public class RedemptionInfoBean extends BaseBean {

	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/** The Constant LOGGER. */
	static final Logger LOGGER = Logger.getLogger(RedemptionInfoBean.class);
	// =================================================
	// Instance Variables
	// =================================================

	/** The customer id. */
	private String customerId;

	/** The promotion. */
	private String promotion;

	/** The pack code set. */
	private String packCodeSet;

	/** The date of redemption. */
	private Date dateOfRedemption;

	/** The header. */
	private String header;

	/** The redemptions info dto. */
	private RedemptionsInfoDTO redemptionsInfoDTO;

	/** The redemption info list. */
	private List<RedemptionInfoVO> redemptionInfoList = new ArrayList<RedemptionInfoVO>();

	/** The a redemption info dto list. */
	private List<RedemptionInfoDTO> aRedemptionInfoDTOList = null;
	//private static ResourceBundle resourceBundle = null;
	
	static {
		LOGGER.info(" Intialize once upon class load");
	}

	/**
	 * Redemption info list.
	 */
	public void redemptionInfoList() {
		try {
			String userEnteredCustId = getCustomerId();
			if (StringUtils.isNotBlank(userEnteredCustId)) {

				redemptionsInfoDTO = RedemptionInfoDelegator
						.redemptionDetails(userEnteredCustId);
				if (redemptionsInfoDTO != null && redemptionsInfoDTO.getRedemptionInfo() != null && redemptionsInfoDTO.getRedemptionInfo().size() > 0) {
				
				setaRedemptionInfoDTOList(redemptionsInfoDTO.getRedemptionInfo());
				} else {
					FacesMessage fm = new FacesMessage(UPCConstants.UPCMessages.WARNMSG_REDEMPTIONINFO_NODATAFOUND.getMsg());
					fm.setSeverity(FacesMessage.SEVERITY_WARN);
					FacesContext.getCurrentInstance().addMessage(
							"redemptionInfofrm:infor", fm);
					if (null != aRedemptionInfoDTOList) {
						aRedemptionInfoDTOList.clear();
					}
				}

			}
		} catch (UPCApplicationException aUpcApplicationException) {
			FacesMessage aFacesMessage = new FacesMessage(resourceBundle.getString(aUpcApplicationException.getErrorKey() + ".error"));
			aFacesMessage.setSeverity(FacesMessage.SEVERITY_ERROR);
			FacesContext.getCurrentInstance().addMessage("userManagement:system", aFacesMessage);
			if (null != aRedemptionInfoDTOList) {
				aRedemptionInfoDTOList.clear();
			}
		}
		

	}

	// =================================================
	// Accessors
	// =================================================

	/**
	 * Gets the customer id.
	 *
	 * @return the customer id
	 */
	public String getCustomerId() {
		return customerId;
	}

	/**
	 * Sets the customer id.
	 *
	 * @param iCustomerId the new customer id
	 */
	public void setCustomerId(final String iCustomerId) {
		this.customerId = iCustomerId;
	}

	/**
	 * Gets the promotion.
	 *
	 * @return the promotion
	 */
	public String getPromotion() {
		return promotion;
	}

	/**
	 * Sets the promotion.
	 *
	 * @param iPromotion the new promotion
	 */
	public void setPromotion(final String iPromotion) {
		this.promotion = iPromotion;
	}

	/**
	 * Gets the pack code set.
	 *
	 * @return the pack code set
	 */
	public String getPackCodeSet() {
		return packCodeSet;
	}

	/**
	 * Sets the pack code set.
	 *
	 * @param iPackCodeSet the new pack code set
	 */
	public void setPackCodeSet(final String iPackCodeSet) {
		this.packCodeSet = iPackCodeSet;
	}

	/**
	 * Gets the date of redemption.
	 *
	 * @return the date of redemption
	 */
	public Date getDateOfRedemption() {
		return dateOfRedemption;
	}

	/**
	 * Sets the date of redemption.
	 *
	 * @param iDateOfRedemption the new date of redemption
	 */
	public void setDateOfRedemption(final Date iDateOfRedemption) {
		this.dateOfRedemption = iDateOfRedemption;
	}

	/**
	 * Gets the header.
	 *
	 * @return the header
	 */
	public String getHeader() {
		return header;
	}

	/**
	 * Sets the header.
	 *
	 * @param iHeader the new header
	 */
	public void setHeader(final String iHeader) {
		this.header = iHeader;
	}

	/**
	 * Gets the redemption info list.
	 *
	 * @return the redemption info list
	 */
	public List<RedemptionInfoVO> getRedemptionInfoList() {
		return redemptionInfoList;
	}

	/**
	 * Sets the redemption info list.
	 *
	 * @param iRedemptionInfoList the new redemption info list
	 */
	public void setRedemptionInfoList(final List<RedemptionInfoVO> iRedemptionInfoList) {
		this.redemptionInfoList = iRedemptionInfoList;
	}

	/**
	 * Gets the redemption dto.
	 *
	 * @return the redemption dto
	 */
	public RedemptionsInfoDTO getRedemptionDTO() {
		return redemptionsInfoDTO;
	}

	/**
	 * Sets the redemption dto.
	 *
	 * @param iRedemptionDTO the new redemption dto
	 */
	public void setRedemptionDTO(final RedemptionsInfoDTO iRedemptionDTO) {
		this.redemptionsInfoDTO = iRedemptionDTO;
	}

	/**
	 * Gets the a redemption info dto list.
	 *
	 * @return the a redemption info dto list
	 */
	public List<RedemptionInfoDTO> getaRedemptionInfoDTOList() {
		return aRedemptionInfoDTOList;
	}

	/**
	 * Sets the a redemption info dto list.
	 *
	 * @param iRedemptionInfoDTOList the new a redemption info dto list
	 */
	public void setaRedemptionInfoDTOList(final 
			List<RedemptionInfoDTO> iRedemptionInfoDTOList) {
		this.aRedemptionInfoDTOList = iRedemptionInfoDTOList;
	}

}
